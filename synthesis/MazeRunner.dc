# Read in verilog code
read_file -format sverilog { rst_synch.sv, PWM11.sv, mtr_drv.sv, err_compute_DP.sv, err_compute_SM.sv, err_compute.sv, SPI_mstr16.sv, PID.sv, A2D_intf.sv, IR_intf.sv, cmd_proc.sv, MazeRunner.sv, UART_wrapper.sv, UART_rcv.sv }

# Set the current design
set current_design MazeRunner

# Setup clock
create_clock -name "clk" -period 2.857 -waveform { 0 1.4285 } { clk }
set_dont_touch_network [find port clk]

# Set input delay
set prim_inputs [remove_from_collection [all_inputs] [find port clk]]
set_input_delay -clock clk 0.5 $prim_inputs

# Set NAND
set prim_inputs_without_rst_n [remove_from_collection $prim_inputs [find port RST_n]]
set_driving_cell -lib_cell NAND2X2_RVT -library saed32rvt_tt0p85v25c $prim_inputs_without_rst_n

# Set output delay
set_output_delay -clock clk 0.5 [all_outputs]

# Set load
set_load 0.1 [all_outputs]

# Wire model
set_wire_load_model -name 16000 -library saed32rvt_tt0p85v25c

# Set max transition time
set_max_transition 0.15 [current_design]

# Set clock uncertainty
set_clock_uncertainty -setup 0.15 clk
set_clock_uncertainty -hold 0.15 clk

# Compile, flatten, then recompile
compile -map_effort high
ungroup -all -flatten
compile -map_effort high

# Timing reports
report_timing -delay max > max_delay.rpt
report_timing -delay min > min_delay.rpt
report_area > MazeRunner_area.txt

# Flatten again
ungroup -all -flatten

# Write out final netlist
write -format verilog MazeRunner -output MazeRunner.vg

# Write SDC
write_sdc MazeRunner.sdc
